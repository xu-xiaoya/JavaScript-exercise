
第2章  HTML语言基础

1、HTML文档结构
<!DOCTYPE html>
<html>
<head>
</head>
<body>
</body>
</html>

第一个HTML示例
<!DOCTYPE html>
<html>
<head>
<meta charset = "utf-8">
<title>我的第一个网页</title>
</head>
<body>
<p>Hello，World！</p>
</body>
</html>
其中：
<!DOCTYPE html>为文档类型声明。<!DOCTYPE> 声明位于文档中的最前面的位置，处于 <html> 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。
<title>与</title>之间的网页的标题，出现在标题栏中
<meta charset = "utf-8">声明网页所使用的字符编码为utf-8。
<html>与</html>之间的文本描述网页
<head>与</head>之间的是网页的开头部分，描述一些网页相关的信息。
<body>与</body>之间的是网页的主体部分，为可见的页面内容
<p>与</p>之间的文本被显示为段落


2、HTML 标签
HTML 文档和 HTML 元素是通过 HTML 标签进行标记的
HTML 标签由开始标签和结束标签组成
开始标签是被括号包围的元素名
结束标签是被括号包围的斜杠和元素名
某些 HTML 元素没有结束标签，比如 <br>
附：<br> 就是没有关闭标签的空元素，在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。在开始标签中添加斜杠，比如 <br />，是关闭空元素的正确方法
HTML 标签对大小写不敏感：<P> 等同于 <p>。万维网联盟（W3C）在 HTML 4 中推荐使用小写，而在未来 (X)HTML 版本中强制使用小写。


3、HTML 标题
HTML 标题是通过 <h1> - <h6> 等标签进行定义的。
如：
<h1>这是标题1</h1>
<h2>这是标题2</h2>
<h3>这是标题3</h3>
<h4>这是标题4</h4>
<h5>这是标题5</h5>
<h6>这是标题6</h6>


4、HTML 水平线
<hr /> 标签在 HTML 页面中创建水平线。
hr 元素可用于分隔内容。
如：
<p>这是一段文字。</p>
<hr />
<p>这是另一段文字。</p>


5、HTML 段落<p>
HTML 段落是通过 <p> 标签进行定义的。
如：
<p>这是一段文字。</p>
<p>这是另一段文字。</p>


6、注释 <!--  -->
注释不会被浏览器显示出来。
如：
<!--这是一段注释。-->

7、文本格式化标签 <tt> <i> <b> <big> <small>
<tt>	呈现类似打字机或者等宽的文本效果。
<i>	显示斜体文本效果。
<b>	呈现粗体文本效果。
<big>	呈现大号字体效果。
<small>	呈现小号字体效果。


8、HTML语义标签
<em>	把文本定义为强调的内容。
<strong>把文本定义为语气更强的强调的内容。
<dfn>	定义一个定义项目。
<code>	定义计算机代码文本。
<samp>	定义样本文本。
<kbd>	定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。
<var>	定义变量。您可以将此标签与 <pre> 及 <code> 标签配合使用。
<cite>	定义引用。可使用该标签对参考文献的引用进行定义，比如书籍或杂志的标题。
一般浏览器会把em元素呈现为斜体字，而将strong元素呈现为粗体。


9、<ins> 标签和 <del> 标签
<ins> 标签定义已经被插入文档中的文本。
<del> 标签定义文档中已被删除的文本。
<del> 标签和<ins> 标签配合使用，来描述文档中的更新和修正。
大多数浏览器会改写为删除文本和下划线文本。
例：<p>春风又<del>过</del><ins>绿</ins>江南岸</p>


10、上标和下标 <sub> <sup>
<sub>	定义下标文本。
<sup>	定义上标文本。
例：
H<sub>2</sub>O
E = mc<sup>2</sup>


11、引用、引用和术语定义
<abbr>	定义缩写。
<address>	定义地址。
<bdo>	定义文字方向。
<blockquote>	定义长的引用。
<q>	定义短的引用语。
<cite>	定义引用、引证。
<dfn>	定义一个定义项目。
如：
<abbr title="World Wide Web">WWW</abbr>
<bdo dir="rtl">这是一段反方向的文字 This line will be written from right to left</bdo>


12、<pre> 标签
pre 元素可定义预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。
<pre> 标签的一个常见应用就是用来表示计算机的源代码。
例：
<pre>
int main() {
  cout << "Hello, World!" << endl;
}
</pre>


13、水平线 <hr>，换行<br>


14、引用 <blockquote> 和 <q>	
<blockquote>定义长的引用。浏览器呈现为一段缩进文本。
<q>	定义短的引用。浏览器呈现为引号。
例：
<p>
网页设计要学习的内容为：
<blockquote>HTML、CSS、Javascript... </blockquote>
</p>
<p>
网页设计要学习的内容为：
<q>HTML、CSS、Javascript... </q>
</p>


15、特殊字符
	空格	&nbsp;
<	小于号	&lt;
>	大于号	&gt;
&	and符号	&amp;
"	双引号	&quot;
'	撇号 	&apos;
¥	元	&yen;
©	版权	&copy;
×	乘号	&times;
÷	除号	&divide;
∫	积分号	&int;
π	pi	&pi;
‰	千分号	&permil;
½	1/2	&frac12;
♠	spade	&spades;  
♣	club	&clubs;
♥	heart	&hearts;
♦	diamond	&diams;
例：<h2>&lt; &int; &spades; &clubs; &hearts; &diams; &pi; &gt;</h2>


16、属性 title
规定元素的额外信息（可在工具提示中显示）
如：<p title="这是一个诗人，最近很忙">杜甫</p>


23、HTML 链接 <a>
<a>	标签定义超链接。
href属性，表示链接的目标 URL。
target属性，表示打开链接的窗口，值为_blank时表示打开新窗口。
name 属性，创建文档内的书签
如：
<a href="http://www.w3school.com.cn" target="_blank">w3school 在线教程</a>
text-decoration:underline/none  //下划线
color  //文字颜色

24、HTML 链接 - name 属性
name 属性规定锚（anchor）的名称。可以使用 name 属性创建 HTML 页面中的书签。
当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。
如：
<html>
<body>
<p><a href="#C10">查看 Chapter 10。</a></p>
<h2>Chapter 1</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 2</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 3</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 4</a></h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 5</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 6</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 7</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 8</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 9</h2>
<p>This chapter explains ba bla bla</p>
<h2><a name="C10">Chapter 10</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 11</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 12</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 13</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 14</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 15</h2>

<p>This chapter explains ba bla bla</p>
<h2>Chapter 16</h2>
<p>This chapter explains ba bla bla</p>
<h2>Chapter 17</h2>
<p>This chapter explains ba bla bla</p>
</body>
</html>


25、图像 <img>
<img> 标签定义 HTML 页面中的图像。
图像并不会插入 HTML 页面中，而是链接到 HTML 页面上。
<img> 的属性：
src：说明图像的 URL，
alt：规定图像的替换文本。在浏览器无法载入图像时，替换文本属性告诉读者们失去的信息。
width：图像的宽度
height：图像的高度
不要通过 height 和 width 属性来缩放图像。
例：
<img src="image/图片.jpg" width="500" height="500" alt="替换文本" title="图片标题" />

图像可做为链接
<a href="http://www.w3school.com.cn" target="_blank"><img src="image/图片.jpg" /></a>


26、图像映射 <map> <area>
<map>	定义图像映射。
<area>	定义图像映射中的区域。

例：
<html>
<head>
<meta charset = "utf-8">
</head>
<body>
<img src="images/navi.jpg" width="400" height="200" border="0" usemap="#Map">
<map name="Map">
  <area shape="rect" coords="303,22,377,52" href="04-08-01.htm" target ="_blank">
  <area shape="rect" coords="242,76,321,105" href="04-08-02.htm" target ="_blank">
  <area shape="rect" coords="141,126,216,157" href="04-08-03.htm" target ="_blank">
  <area shape="rect" coords="15,152,92,183" href="04-08-04.htm" target ="_blank">
  <area shape ="circle" coords ="55,60,40" href ="04-08-05.htm" target ="_blank">
</map>
</body>
</html>

27、有序列表 <ol> <li>
<ol>	定义有序列表。
<li>	定义列表的项目。
例：
<ol>
   <li>《HTML5+CSS3从入门到精通》</li>
   <li>《HTML5+CSS3+JavaScript从入门到精通》</li>
   <li>《CSS3+DIV网页样式与布局从入门到精通》</li>
   <li>《JavaScript从入门到精通》</li>
   <li>《21天学通HTML+CSS+JavaScript Web开发》</li>
   <li>《JavaScript高级程序设计》</li>
</ol>
对ol元素，HTML5新增的属性reversed，表示序号反转，即按降序显示序号。
如：<ol reversed>
<ol type = "A"> 项目符号变为ABCD……
<ol type = "I"> 项目符号变为罗马字符

28、无序列表 <ul> <li>
<ul>	定义无序列表。
例：
<ul>
   <li>《HTML5+CSS3从入门到精通》</li>
   <li>《HTML5+CSS3+JavaScript从入门到精通》</li>
   <li>《CSS3+DIV网页样式与布局从入门到精通》</li>
   <li>《JavaScript从入门到精通》</li>
   <li>《21天学通HTML+CSS+JavaScript Web开发》</li>
   <li>《JavaScript高级程序设计》</li>
</ul>

29、定义列表 <dl> <dt> <dd>
<dl> 标签定义一个定义列表。
<dl> 标签用于结合 <dt> （定义列表中的项目）和 <dd> （描述列表中的项目）。
自定义列表以 <dl> 标签开始。每个自定义列表项以 <dt> 开始。每个自定义列表项的定义以 <dd> 开始。

例：
<dl>
   <dt>计算机</dt>
   <dd>用来计算的仪器 ... ...</dd>
   <dt>显示器</dt>
   <dd>以视觉方式显示信息的装置 ... ...</dd>
</dl>


30、嵌套列表
<ul>
  <li>咖啡</li>
  <li>茶
    <ul>
      <li>红茶</li>
      <li>绿茶</li>
    </ul>
  </li>
  <li>牛奶</li>
</ul>


31、<div> 和 <span>
块级元素，在浏览器显示时，通常会以新行来开始（和结束）。
例如：<h1>, <p>, <ul>, <table>
内联元素在显示时通常不会以新行开始。
例如：<b>, <td>, <a>, <img>
<div> 元素是块级元素，它是可用于组合其他 HTML 元素的容器。
<div> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。
<span> 元素是内联元素，可用作文本的容器。
<span> 元素也没有特定的含义。


32、HTML 颜色名
仅有 16 种颜色名被 W3C 的 HTML 4.0 标准支持，它们是：aqua、black、blue、fuchsia、gray、green、lime、maroon、navy、olive、purple、red、silver、teal、white、yellow。
如果使用其它颜色的话，就应该使用十六进制的颜色值。


33、HTML <mark> 标签，突出显示文本
<mark> 标签定义带有记号的文本。在需要突出显示文本时使用 <m> 标签。
<mark> 标签是 HTML 5 中的新标签。
例：<p>学习网页设计，主要就是学习<mark>HTML</mark>、<mark>CSS</mark>和<mark>Javascript</mark>。</p>


34、HTML <meter> 标签
<meter> 标签定义已知范围或分数值内的标量测量。也被称为 gauge（尺度）。
例：
<!DOCTYPE html>
<html>
<body>
<p>显示度量值：</p>
<meter value="3" min="0" max="10">3/10</meter><br>
<meter value="0.6">60%</meter>
</body>
</html>


35、HTML <progress> 标签
<progress> 标签标示任务的进度（进程）。
请结合 <progress> 标签与 JavaScript 一同使用，来显示任务的进度。
例：
<!DOCTYPE html>
<html>
<body>
下载进度：
<progress value="22" max="100"></progress>
</body>
</html>


36、注音 <ruby> <rt> 
<ruby> 标签定义 ruby 注释（中文注音或字符）。
<rt> 标签定义字符（中文注音或字符）的解释或发音。
<ruby>标签是 HTML 5 中的新标签。
<ruby> 和 <rt> 标签一同使用，例：
<ruby>
  雷小园<rt>lei xiao yuan</rt>
</ruby>


37、HTML <time> 标签
<time> 标签定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的。
<time> 标签是 HTML 5 中的新标签。目前所有浏览器都不支持 <time> 标签。
如：
<p>我们在每天早上 <time>9:00</time> 开始营业。</p>
<p>我在 <time datetime="2008-02-14">情人节</time> 有个约会。</p>


38、音频
<audio> 标签定义声音，比如音乐或其他音频流。
属性	    	值	        描述
autoplay	autoplay	如果出现该属性，则音频在就绪后马上播放。
controls	controls	如果出现该属性，则向用户显示控件，比如播放按钮。
loop		loop    	如果出现该属性，则每当音频结束时重新开始播放。
preload	    	preload	    	如果出现该属性，则音频在页面加载时进行加载，并预备播放。
                        	如果使用 "autoplay"，则忽略该属性。
src	        url	        要播放的音频的 URL。

<source> 标签为媒介元素（比如 <video> 和 <audio>）定义媒介资源。
  src属性：媒体的地址。
  type属性：媒体文件的类型，供浏览器决定是否下载。

例
<audio src="music/ForElise.mp3"  controls="controls">
  你的浏览器不支持Html5的音频功能
</audio>

<audio controls="controls">
  <source src="music/ForElise.mp3" type="audio/mp3">  <!-- Chrome --> 
  <source src="music/ForElise.ogg" type="audio/ogg">  <!-- Chrome、Firefox --> 
  你的浏览器不支持Html5的音频功能
</audio>


39、视频
<video> 标签定义视频，比如电影片段或其他视频流。
autoplay	autoplay	如果出现该属性，则视频在就绪后马上播放。
controls	controls	如果出现该属性，则向用户显示控件，比如播放按钮。
height		pixels		设置视频播放器的高度。
loop    	loop		如果出现该属性，则当媒介文件完成播放后再次开始播放。
preload		preload		如果出现该属性，则视频在页面加载时进行加载，并预备播放。
poster		URL		规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。
				如果使用 "autoplay"，则忽略该属性。
src	        url	        要播放的视频的 URL。
width		pixels		设置视频播放器的宽度。

例
<video src="music/test.mp4" width="320" height="240" poster="images/chrome.jpg" controls> 
  Your browser does not support the video tag. 
</video>

<video controls> 
  <source src="music/test.ogg" type="video/ogg">
  <source src="music/test.mp4" type="video/mp4">
  你的浏览器不支持Html5的视频功能
</video>

40、<figure> <figcaption> 标签
<figure>	定义媒介内容的分组，以及它们的标题。
<figcaption> 标签定义 figure 元素的标题。
"figcaption" 元素应该被置于 "figure" 元素的第一个或最后一个子元素的位置。
例：
<figure>
  <figcaption>五个主要浏览器的图标</figcaption>
  <img src="image/chrome.png" alt="chrome" />
  <img src="image/FireFox.png" alt="FireFox" />
  <img src="image/IE.png" alt="IE" />
  <img src="image/Opera.png" alt="Opera" />
  <img src="image/Safari.png" alt="Safari" />
</figure>


41、表格 <table> <tr> <td>
table的属性
border：在HTML 4.01 中，border表示表格边框的宽度。在 HTML5 中，border 属性仅用于指示表格是否用于布局目的，且只允许属性值 "" 或 "1"。

<tr>	定义表格中的行
tr的属性
align：规定表格行中内容的水平对齐方式。属性值有：left、right、center、justify、char
valign：规定表格行中内容的垂直对齐方式。属性值有：top、middle、bottom、baseline

<td>	定义表格中的单元格
td的属性
align：规定单元格内容的水平对齐方式。属性值有：left、right、center、justify、char
valign：规定单元格内容的垂直排列方式。属性值有：top、middle、bottom、baseline
colspan：规定此单元格可横跨的列数。
rowspan：规定此单元格可横跨的行数。
例：
<table border="1">
  <tr>
    <td>A1</td>
    <td>A2</td>
    <td>A3</td>
  </tr>
  <tr>
    <td>B1</td>
    <td>B2</td>
    <td>B3</td>
  </tr>
  <tr>
    <td>C1</td>
    <td>C2</td>
    <td>C3</td>
  </tr>
</table>


42、表格中的<th> <caption>标签
<th>	定义表格中的表头单元格。
th基本和td一样。
th 元素中的文本呈现为粗体并且居中。
td 元素中的文本是普通的左对齐文本
<caption> 定义表格的标题。
<caption> 必须直接放置到 <table> 标签之后。每个表格只能规定一个标题。通常标题会居中显示在表格上方。


43、表格的分组 <thead> <tbody> <tfoot>
<tbody>	定义表格的主体。
<thead>	定义表格的表头。
<tfoot>	定义表格的脚注。
thead 元素应该与 tbody 和 tfoot 元素结合起来使用。
thead、tfoot 以及 tbody 元素使您有能力对表格中的行进行分组。当您创建某个表格时，您也许希望拥有一个标题行，一些带有数据的行，以及位于底部的一个总计行。这种划分使浏览器有能力支持独立于表格标题和页脚的表格正文滚动。当长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。

顺序：表头->主体->脚注
例：
<table border="1">

    <thead>
      <tr><td>表头：这是一个test表</td></tr>
    </thead>
    
    <tfoot>
      <tr><td>脚注：2020年5月30日</td></tr>
    </tfoot>

    <tbody>
      <tr><td>主体行1：</td></tr>
      <tr><td>主体行2：</td></tr>
      <tr><td>主体行3：</td></tr>
    </tbody>

</table>

44、表格中的按列分组 <colgroup><col>
<colgroup> 标签用于对表格中的列进行组合，以便对其进行格式化。
<col> 标签为表格中的一个或多个列定义属性值。
属性 span 定义 <colgroup> 或 <col> 应当横跨的列数。
通过使用 <colgroup> 和 <col> 标签，可以向整个列应用样式，而不需要重复为每个单元格或每一行设置样式。
如果希望为一组表格列规定相同的属性值，请使用 <colgroup> 元素。
例1：
<colgroup span="2" style="background:#cff"></colgroup>
<colgroup span="5" width="200"></colgroup>
例2：
<!DOCTYPE html>
<html>
<body>
  <table border="1">
	<!-- span="2"代表横跨两列，对两列样式一起改变 -->
    <colgroup span="2" style="background:#cff"></colgroup>
	<!-- 单独改变第三列样式 -->
    <col style="background:lightgray"><col>
    
    <thead>
      <tr>
        <td>表头：</td>
        <td>这是一个test表</td>
        <td>属性1</td>
        <td>属性2</td>
      </tr>
    </thead>
    
    <tfoot>
      <tr>
        <td>脚注：</td>
        <td>2020年5月30日</td>
        <td>/</td>
        <td>/</td>
      </tr>
    </tfoot>

    <tbody>
        
      <tr>
        <td>主体行1：</td>
        <td>1</td>
        <td>0</td>
        <td>1</td>
      </tr>
      <tr>
        <td>主体行2：</td>
        <td>1</td>
        <td>0</td>
        <td>1</td>
      </tr>
      <tr>
        <td>主体行3：</td>
        <td>1</td>
        <td>0</td>
        <td>1</td>
      </tr>
    </tbody>
  </table>
 
</body>
</html>


45、图标
图标，favicon.ico，为缩略的网站标志，用于显示网站的logo,它显示位于浏览器的地址栏或者标签上,如图红框的位置。

1. Favicon.ico是图标特有的一种图片文件，可由基本的格式（JPG,PNG等……）转化而来，图标生成网址：https://myico.cn/
2. 生成favicon.ico图像文件后，将favicon.ico图像放入Images文件夹中。
例：
<head>
   <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
</head>


46、文档细节 <details> <summary>
    <summary> 标签包含 details 元素的标题，"details" 元素用于描述有关文档或文档片段的详细信息。

例
<details>
  <summary>课程表</summary>
  <p>这是这个学期的一个课程表</p>
</details>


47、HTML5布局元素
<header>	定义文档或节的页眉
<nav>		定义导航链接的容器。
<section>	定义文档中的节
<article>	定义独立的自包含文章
<aside>		定义内容之外的内容（比如侧栏）
<footer>	定义文档或节的页脚
<details>	定义额外的细节
<summary>	定义 details 元素的标题
<hgroup>	定义有关文档中的 section 的信息。<hgroup> 标签用于对网页或区段（section）的标题进行组合。


例
<div id="container">
<header></header>
<nav></nav>
<div id="main">
  <aside id="left">
    <nav></nav>
  </aside>
  <aside id="right"></aside>
  <section>
    <article></article>
    <article></article>
  </section>
</div>
<footer></footer>
</div>


48、典型的 HTML5 页面
<!DOCTYPE html>
<title>HTML</title>
<style>
    body {
        font-family:Verdana,sans-serif;font-size:0.8em;
    }
    header,footer,section,article {
        border:1px solid rgb(238, 192, 94);
        margin:5px;margin-bottom:15px;padding:8px;
        background-color:white;
    }
    header,footer {
        color:white;background-color:rgb(243, 138, 0);margin-bottom:5px;
    }
    section {
        background-color:rgb(255, 206, 72);
    }
    nav ul  {
        margin:0;padding:0;
    }
    nav ul li {
        display:inline; margin:5px;
    }
</style>

<body>

  <header>
    <h1>The fruit channel reports</h1>
  </header>

  <nav>
    <ul>
      <li>News</li>
      <li>Sports</li>
    </ul>
  </nav>

  <section>
    <h2>Self-reported time</h2>

    <article>
      <h2>A self - description of an apple</h2>
      <p>I am an apple.</p>
    </article>

    <article>
      <h2>A self - description of a banana</h2>
      <p>Hey! I'm a banana.</p>
    </article>

  </section>

  <footer>
    <p>© 2020 The fruit channel reports. </p>
  </footer>

</body>
</html>

51、HTML 表单
HTML 表单用于收集用户输入
<form> 元素定义 HTML 表单
HTML 表单包含表单元素，表单元素指的是不同类型的 input 元素、复选框、单选按钮、提交按钮等等。

52、HTML 输入类型，<input> 元素

1) 文本 text
<input type="text"> 定义用于文本输入的单行输入字段
例
<input type = "text" name = "user">

2) 单选按钮 radio
<input type="radio"> 定义单选按钮
例
<input type="radio" name="sex" value="male" checked>男<br>
<input type="radio" name="sex" value="female">女<br>

3) 多选按钮 checkbox
<input type="checkbox"> 定义复选框
例
<input type = "checkbox" name = "interest" value = "唱歌">唱歌
<input type = "checkbox" name = "interest" value = "电影">电影
<input type = "checkbox" name = "interest" value = "下棋">下棋
<input type = "checkbox" name = "interest" value = "打牌">打牌

4) 密码字段 password
<input type="password"> 定义密码字段
例
<input type="password" name="psw">

5) 提交 submit
<input type="submit"> 定义提交表单数据至表单处理程序的按钮
例
<input type="submit" value="提交">

6) 按钮
<input type="button> 定义按钮。
例
<input type="button" onclick="alert('Hello World!')" value="Click Me!">


53、HTML5 输入类型

1) 数字 number
<input type="number"> 用于应该包含数字值的输入字段
例
<input type = "number" name = "age" value="20" min="1" max="100">

2) 日期 date
<input type="date"> 用于应该包含日期的输入字段
例
<input type="date" name="birthday" >

3) 颜色 color
<input type="color"> 用于应该包含颜色的输入字段
例
<input type="color" name="favcolor">

4) 范围 range
<input type="range"> 用于应该包含一定范围内的值的输入字段
例
<input type="range" name="points" min="0" max="10">

5) 年月 month
<input type="month"> 允许用户选择月份和年份
例
<input type="month" name="birthmonth">

6) 周 week
<input type="week"> 允许用户选择周和年。
例
<input type="week" name="week_year">

7) 时间 time
<input type="time"> 允许用户选择时间（无时区）
例
<input type="time" name="usr_time">

8) 日期和时间 datetime
<input type="datetime"> 允许用户选择日期和时间（有时区）。
例
<input type="datetime" name="daytime">
目前浏览器都不支持datetime

9) 日期和时间 datetime-local
<input type="datetime-local"> 允许用户选择日期和时间（无时区）
例
<input type="datetime-local" name="daytime">

10) 电子邮件 email
<input type="email"> 用于应该包含电子邮件地址的输入字段
在被提交时自动对电子邮件地址进行验证
例
<input type="email" name="email">

11) 搜索 search
<input type="search"> 用于搜索字段（搜索字段的表现类似常规文本字段）
例
<input type="search" name="googlesearch">

12) 电话号码 tel
<input type="tel"> 用于应该包含电话号码的输入字段
目前只有Safari 支持 tel 类型
例
<input type="tel" name="usrtel">

13) 网址 url
<input type="url"> 用于应该包含 URL 地址的输入字段
在提交时能够自动验证 url 字段
例
<input type="url" name="homepage">

54、HTML Input 属性

1) value 属性
value 属性规定输入字段的初始值

2) readonly 属性
readonly 属性规定输入字段为只读（不能修改）

3) disabled 属性
disabled 属性规定输入字段是禁用的
被禁用的元素是不可用和不可点击的，被禁用的元素不会被提交。

4) size 属性
size 属性规定输入字段的尺寸（以字符计）

5) maxlength 属性
maxlength 属性规定输入字段允许的最大字符数


55、HTML5 为 <input> 增加的属性

1) min 和 max 属性
min 和 max 属性规定 <input> 元素的最小值和最大值
min 和 max 属性适用于如需输入类型：number、range、date、datetime、datetime-local、month、time 以及 week。

2) autocomplete 属性
autocomplete 属性规定表单或输入字段是否应该自动完成。
当自动完成开启，浏览器会基于用户之前的输入值自动填写值。
autocomplete 属性适用于 <form> 以及如下 <input> 类型：text、search、url、tel、email、password、datepickers、range 以及 color。
例
<form action="action_page.php" autocomplete="on">
   姓名：<input type="text" name="fname"><br>
   邮箱：<input type="email" name="email" autocomplete="off"><br>
   <input type="submit">
</form> 

3) autofocus 属性
autofocus 属性是布尔属性。
如果设置，则规定当页面加载时 <input> 元素应该自动获得焦点。
例
姓名：<input type="text" name="fname" autofocus>

4) form 属性
form 属性规定 <input> 元素所属的一个或多个表单
例、输入字段位于 HTML 表单之外（但仍属表单）：
<form action="action_page.php" id="form1">
   First name: <input type="text" name="fname"><br>
   <input type="submit" value="Submit">
</form>
Last name: <input type="text" name="lname" form="form1">

5) formnovalidate 属性
novalidate 属性是布尔属性。
如果设置，则规定在提交表单时不对 <input> 元素进行验证。
formnovalidate 属性覆盖 <form> 元素的 novalidate 属性。
formnovalidate 属性可用于 type="submit"。

6) formtarget 属性
formtarget 属性规定的名称或关键词指示提交表单后在何处显示接收到的响应。
formtarget 属性会覆盖 <form> 元素的 target 属性。
formtarget 属性可与 type="submit" 和 type="image" 使用。

7) height 和 width 属性
height 和 width 属性规定 <input> 元素的高度和宽度。
height 和 width 属性仅用于 <input type="image">。
例、把图像定义为提交按钮，并设置 height 和 width 属性：
<input type="image" src="submit.gif" width="48" height="48">

8) list 属性
list 属性引用的 <datalist> 元素中包含了 <input> 元素的预定义选项。

9) multiple 属性
multiple 属性是布尔属性。
如果设置，则规定允许用户在 <input> 元素中输入一个以上的值。
multiple 属性适用于以下输入类型：email 和 file。
例
<input type="file" name="img" multiple>

10) pattern 属性
pattern 属性规定用于检查 <input> 元素值的正则表达式。
pattern 属性适用于以下输入类型：text、search、url、tel、email、and password。
例
<input type="tel" name="telephone" pattern = "0\d{3}-\d{7}" placeholder="格式：0795-1234567">

11) placeholder 属性
placeholder 属性规定用以描述输入字段预期值的提示（样本值或有关格式的简短描述）。
该提示会在用户输入值之前显示在输入字段中。
placeholder 属性适用于以下输入类型：text、search、url、tel、email 以及 password。

12) required 属性
required 属性是布尔属性。
如果设置，则规定在提交表单之前必须填写输入字段。
required 属性适用于以下输入类型：text、search、url、tel、email、password、date pickers、number、checkbox、radio、and file.
例
<input type = "text" name = "user" autofocus required>

13) step 属性
step 属性规定 <input> 元素的合法数字间隔。
step 属性适用于以下输入类型：number、range、date、datetime、datetime-local、month、time 以及 week。

14) novalidate 属性
novalidate 属性属于 <form> 属性。
如果设置，则 novalidate 规定在提交表单时不对表单数据进行验证。
例
<form action="action_page.php" novalidate>

-------42

56、<textarea> 元素
<textarea> 元素定义多行输入字段（文本域）
例
简介：<textarea rows="5" cols="30"></textarea>


57、<select> 元素（下拉列表）
<select> 元素定义下拉列表
例
<select name = "province">
<option value = "江西" selected = "selected">江西</option>
<option value = "湖北">湖北</option>
<option value = "湖南">湖南</option>
<option value = "广东">广东</option>
</select>


58、<button> 元素
<button> 元素定义可点击的按钮
如
<button type="button" onclick="alert('Hello World!')">Click Me!</button>


59、<datalist> 元素
<datalist> 元素为 <input> 元素规定预定义选项列表
<input> 元素的 list 属性必须引用 <datalist> 元素的 id 属性。

例
<input list="browsers">
<datalist id="browsers">
   <option value="Internet Explorer">
   <option value="Firefox">
   <option value="Chrome">
   <option value="Opera">
   <option value="Safari">
</datalist>


60、<fieldset>元素
fieldset 元素可将表单内的相关元素分组。
例
<fieldset>
  <legend>健康信息</legend>
  身高：<input type="text" />
  体重：<input type="text" />
</fieldset>

61、<marquee>元素
marquee可以实现文字滚动

onMouseOut="this.start()" ：用来设置鼠标移出该区域时继续滚动
onMouseOver="this.stop()"：用来设置鼠标移入该区域时停止滚动

例1：
<marquee>
   <font size=+3 color=red>Hello, World</font>
</marquee>

例2：
<marquee id="affiche" align="left" behavior="scroll" bgcolor="#FF0000" direction="up" height="300" width="200" 
hspace="50" vspace="20" loop="-1" scrollamount="10" scrolldelay="100" 
onMouseOut="this.start()" 
onMouseOver="this.stop()">
这是一个完整的例子
</marquee>