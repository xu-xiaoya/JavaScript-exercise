一、属性
1，readyState：当前对象处于什么状态
case 0 :未初始化状态，此时，已经创建了一个XMLHttpRequest对象，但是还没有初始化。
Case 1:准备发送状态：此时，已经调用了XMLHttpRequest对象的open()方法，并且XMLHttpRequest对象已经准备好将一个请求发送到服务器。
case 2：已发送状态，此时已经通过send方法把一个请求发送到服务器，等待响应。
case 3:正在接收状态，此时已经接收到HTTP响应头部信息，但是消息体部分还没有完全接收到。
case 4:完成响应状态，此时已经完成了HttpResponse响应的接收

2.status：HTTP状态代码。
仅当readyState属性值为3（正在接受中）或者4（已加载）时，才能对此属性进行访问。如果在readyState属性值小于3时，试图去读取status属性值，将引发一个异常。
1**	信息，服务器收到请求，需要请求者继续执行操作
2**	成功，操作被成功接收并处理
3**	重定向，需要进一步的操作以完成请求
4**	客户端错误，请求包含语法错误或无法完成请求
5**	服务器错误，服务器在处理请求的过程中发生了错误

常用：
200    |ok              |客户端请求成功              
400    |Bad Request     |客户端请求有语法错误，不能被服务器所理解
401    |Unauthorized    |请求未经授权，这个状态代码必须和WWW-Authenticate报头
403    |Forbidden       |服务器收到请求，但拒绝提供服务
404    |Not Found       |请求资源不存在，例如输入了错误的URL
500    |Internal Server Error   |服务器发生不可预期的错误
503    |Server Unavailable      |服务器当前不能处理客户端的请求，一段时间后，可能恢复正常

HTTP请求和响应顺利完成：status=200&&readyState=4


3.responseXML：以XML数据返回响应信息。
只有readyState=4，且响应头部的Content-Type的MIME类型被指定为XML(text/xml或者application/xml)时，该属性才会有值并且被解析成一个XML文档，否则该属性为null。


4.responseBody：返回正文信息


5.responseStream：以文本流形式返回响应信息


6.responseText：以字符串的形式返回响应信息。
当readyState属性为0、1或2时，responseText属性包含一个空字符串：
当readyState属性值为3时，响应中包含客户端还没完成的响应信息；
当readyState属性值卫4，responseText属性才包含完整的响应信息。


7.statusText：HTTP状态代码文本。
仅当readyState属性为3或者4才可用。当readyState属性为其他值时试图存取statusText属性将引发一个异常。


8.onreadystatechange：指定当readyState属性改变时的事件处理句柄。
每当readyState属性发生改变时，就好触发onreadystatechange事件，一般都要通过该事件来触发回传处理函数。



二、方法
1.open()：创建一个http请求，并指定请求的方法、url以及验证信息
XMLHttpRequest对象是通过调用open(method,uri,async,username,password)方法来进行初始化工作的。
调用该方法将得到一个可以用来进行发送的对象，open有五个参数。
//method和url必须，method指定发送请求的HTTP方法（GET,POST,PUT,DELETE,HEAD)，大写。
//async参数用用指定是否请求是异步的，默认是true。如果需要发送一个同步请求，需要把该参数设置为false。
//如果需要服务器验证访问用户的情况，可以设置username和password


2.send：发送请求到HTTP服务器并接受回应。
send(varBody)
varBody表示将通过该请求发送的数据，如果不传递信息，参数为null

调用open()方法后，调用send()方法按照open方法设定的参数将请求进行发送。
当open方法中async为true，在send（）方法调用后立即返回，否则将会中断直到请求返回。
要注意的是，send方法必须在readyState为1时调用open方法以后才能调用。在调用send方法以后到接收响应信息知情，readyState属性的值将被设置成2.
一旦接收到响应信息，readyState属性将被设为3.直到响应接收完成，readyState属性的值才会被设定为4。send()方法使用一个可选的参数，该参数可以包含可变类型的数据。用户可以使用它并通过POST方法把数据发送到服务器。
另外可以显示的使用null参数调用sned方法，这与不用参数调用该方法一样。

对于大多数其他的数据类型，在调用send方法之前，应该使用setRequestHeader()方法先设置Content-Type头部，
如果send（data)方法中的data参数的类型为DOMString,那么数据将被编码成UTF-8，
如果是Document类型，那么将使用由data.xmlEncoding指定的编码串行化该数据。


3.abort()：取消当前请求
该方法可以暂停一个HttpRequest的请求发送或者HttpResponse的接收，并且将XMLHttp Request对象设置 为初始化状态。


4.setRequestHeader()：设置请求的http头部信息。
当readyState属性为1时，可以调用opne方法后调用这个方法；否则将得到一个异常。
setRequestHeader(header,value)方法包含两个参数，第一个是header键名称，后一个是键值。


5.getResponseHeader()：从响应信息中获取指定的HTTP的头部值。
仅当readyState属性是3或者4（既响应头部可用以后）才可用调用该方法。否则，该方法返回一个空字符串。
通过getAllResponse Header()方法获取所有的HttpResponse的头部信息。