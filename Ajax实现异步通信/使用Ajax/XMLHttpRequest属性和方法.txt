XHR对象功能和属性：

一、属性
1，readyState：当前对象处于什么状态
case 0 UNSENT：未初始化状态，已创建XMLHttpRequest对象，但是还没有初始化调用open()方法。
Case 1 OPENED：准备发送状态，已调用了XMLHttpRequest对象的open()方法，并且XMLHttpRequest对象已经准备好将一个请求发送到服务器。
case 2 HEADERS_RECEIVED：已发送状态，send()方法已被调用，并且头部和状态已可获得。
case 3 LOADING：正在接收状态（下载中），已经接收到HTTP响应头部信息，但是消息体部分还没有完全接收到，responseText已接收部分数据。
case 4 DONE：完成响应状态（下载完成），此时已经完成了HttpResponse响应的接收



2.status：HTTP状态代码。
仅当readyState属性值为3（正在接受中）或者4（已加载）时，才能对此属性进行访问。如果在readyState属性值小于3时，试图去读取status属性值，将引发一个异常。
1**	信息，服务器收到请求，需要请求者继续执行操作
2**	成功，操作被成功接收并处理
3**	重定向，需要进一步的操作以完成请求
4**	客户端错误，请求包含语法错误或无法完成请求
5**	服务器错误，服务器在处理请求的过程中发生了错误

常用：
200    |ok              |客户端请求成功              
400    |Bad Request     |客户端请求有语法错误，不能被服务器所理解
401    |Unauthorized    |请求未经授权，这个状态代码必须和WWW-Authenticate报头
403    |Forbidden       |服务器收到请求，但拒绝提供服务
404    |Not Found       |请求资源不存在，例如输入了错误的URL
500    |Internal Server Error   |服务器发生不可预期的错误
503    |Server Unavailable      |服务器当前不能处理客户端的请求，一段时间后，可能恢复正常

HTTP请求和响应顺利完成：status=200&&readyState=4


3.onreadystatechange：指定当readyState属性改变时的事件处理句柄。
每当readyState属性发生改变时，触发onreadystatechange事件，一般都要通过该事件来触发回传处理函数。
0-1 1-2 2-3 3-4

4.responseXML：以XML数据返回响应信息。
只有readyState=4，且响应头部的Content-Type的MIME类型被指定为XML(text/xml或者application/xml)时，该属性才会有值并且被解析成一个XML文档，否则该属性为null。


5.responseBody：返回正文信息


6.responseStream：以文本流形式返回响应信息


7.responseText：以字符串的形式返回响应信息。
当readyState属性为0、1或2时，responseText属性包含一个空字符串：
当readyState属性值为3时，响应中包含客户端还没完成的响应信息；
当readyState属性值卫4，responseText属性才包含完整的响应信息。


8.statusText：HTTP状态代码文本。
仅当readyState属性为3或者4才可用。当readyState属性为其他值时试图存取statusText属性将引发一个异常。




二、方法
1.open()：
功能：创建http请求，并指定请求的方法、url以及验证信息

open(method,uri,async,username,password)
- method ：请求方式  "GET" "POST" "PUT" "DELETE"
- url：请求服务器地址
- async：请求是否异步，默认是true/异步(建议)
如果需要发送一个同步请求，需要把该参数设置为false。

如果需要服务器验证访问用户的情况，可以设置username和password


2.send()：发送请求到HTTP服务器并接受回应。

send()按照open()方法设定的参数将请求发送：
- 如果请求方式 GET DELETE  send() 没有参数/参数为null
- 如果请求方式 POST PUT    send('id=19&name=dd&age=21');
……
…… 
- async为true：send方法调用后立即返回，否则将会中断直到请求返回。

步骤：
a. readyState=1 且 已调用open方法：调用send()
b. 调用send()后接收响应信息知情：readyState=2
c.一旦接收到响应信息，readyState=3.
d.响应接收完成，readyState=4

对于大多数其他的数据类型，在调用send方法之前，应该使用setRequestHeader()方法先设置Content-Type头部，
如果send（data)方法中的data参数的类型为DOMString,那么数据将被编码成UTF-8，
如果是Document类型，那么将使用由data.xmlEncoding指定的编码串行化该数据。


3.abort()：取消当前请求
该方法可以暂停一个HttpRequest的请求发送或者HttpResponse的接收，并且将XMLHttp Request对象设置 为初始化状态。


4.setRequestHeader()：设置请求的http头部信息。
当readyState属性为1时，可以调用opne方法后调用这个方法；否则将得到一个异常。
setRequestHeader(header,value)方法包含两个参数，第一个是header键名称，后一个是键值。


5.getResponseHeader()：从响应信息中获取指定的HTTP的头部值。
仅当readyState属性是3或者4（既响应头部可用以后）才可用调用该方法。否则，该方法返回一个空字符串。
通过getAllResponse Header()方法获取所有的HttpResponse的头部信息。