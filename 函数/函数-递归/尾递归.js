/*普通线型递归运算：返回值会被调用者使用
f(5)={5 * f(4)}
={5 * {4 * f(3)}}
={5 * {4 * {3 * f(2)}}}
={5 * {4 * {3 * {2 * f(1)}}}}
={5 * {4 * {3 * {2 * 1}}}}
={5 * {4 * {3 * 2}}}
={5 * {4 * 6}}
={5 * 24}
=120
*/
function f(n) {
    return (n == 1) ? 1 : n*f(n-1);
}

/*尾递归：具有迭代算法的特征，返回值不会被调用者使用
f(5) = f(5,1)
=f(4,5)
=f(3,20)
=f(2,60)
=f(1,120)
=120
*/
//①
function f(n) {
    return (n == 1) ? 1 : e(n,1);
}
function e(n, a) {
    return (n == 1) ? a : e(n-1, a*n);
}
//②
function f(n) {
    var w = 1;
    for (var i = 1; i <= n; i++) {
        w = w * i;
    }
}